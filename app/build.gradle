plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("org.jetbrains.kotlin.plugin.parcelize")
    id("com.google.devtools.ksp")
}

android {
    namespace("com.deepid.lgc")
    compileSdk(32)

    defaultConfig {
        applicationId("com.regula.documentreader")
        multiDexEnabled(true)
        minSdk(21)
        //noinspection OldTargetApi
        targetSdk(32)
        versionCode(1)
        versionName("1.1.0")
    }

    buildTypes {
        release {
            minifyEnabled(false)
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            buildConfigField("String", "BASE_URL", "\"$API_PROD\"")
        }
        debug {
            buildConfigField("String", "BASE_URL", "\"$API_DEV\"")
        }
    }
    buildFeatures{
        viewBinding(true)
        buildConfig(true)
    }
    compileOptions {
        coreLibraryDesugaringEnabled(true)
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

dependencies {
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:$core_library_desugaring")

    // View
    implementation("androidx.core:core-ktx:$core_ktx")
    implementation("androidx.appcompat:appcompat:$appcompat")
    implementation("com.google.android.material:material:$material")
    implementation("androidx.constraintlayout:constraintlayout:$constraintlayout")
    implementation("androidx.viewpager2:viewpager2:$viewpager2")

    // Zoom Image View
    implementation("com.otaliastudios:zoomlayout:$zoom_image_view_version")

    // Regula Document Reader SDK
    implementation("com.regula.btdevice:api:1.0.+@aar")
    implementation("com.regula.documentreader.core:fullauthrfid:6.9.+@aar")
    implementation("com.regula.documentreader:api:6.9.+@aar") {
        transitive = true
    }

    // Regula Face SDK
    implementation ("com.regula.face:api:5.2.+@aar") {
        transitive = true
    }
    implementation ("com.regula.face:core:5.2.+@aar")

    // Coroutine
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion")

    // Networking
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion")
    implementation("com.squareup.retrofit2:converter-gson:$retrofitVersion")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp_loggingVersion")
    // Chuck
    debugImplementation("com.github.chuckerteam.chucker:library:$chuck")
    releaseImplementation("com.github.chuckerteam.chucker:library-no-op:$chuck")

    // Dependency Injection
    implementation("io.insert-koin:koin-core:$koinVersion")
    implementation("io.insert-koin:koin-android:$koin_androidVersion")
    implementation("io.insert-koin:koin-androidx-navigation:$koin_androidVersion")

    // Room
    implementation("androidx.room:room-runtime:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    ksp("androidx.room:room-compiler:$roomVersion")

    // Ktor
    implementation("io.ktor:ktor-server-core:$ktorVersion")
    implementation("io.ktor:ktor-server-netty:$ktorVersion")
    implementation("io.ktor:ktor-html-builder:$ktorVersion")
    implementation("io.ktor:ktor-gson:$ktorVersion")
}